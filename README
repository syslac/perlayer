Perlayer:

Audio player in Perl written as exercise after reading "Higher order perl".
This branch uses Mplayer as backend. Should probably be master branch too.

Dependencies:
 * Mplayer
 * DBI
 * Class::DBI::Sweet
 * MP3::Info
 * Ogg::Vorbis::Header
 * Audio::FLAC::Header
 * Term::ReadKey 

You can get all these requirements on a Debian-based system with 
 apt-get install mplayer libdbi-perl libmp3-info-perl libogg-vorbis-header-perl libaudio-flac-header-perl libclass-dbi-sweet-perl libterm-readkey-perl

Play modes:
 Default: shuffle tracks.
 Album: shuffle albums; plays whole album in order.
 Mood: Plays only albums you've tagged with the appropriate "mood" tag.

Options:
 To launch the player simply run
  perl ogg.pl (or ./ogg.pl)
 
 To add music to your collection, use
  perl ogg.pl -a /path/to/music

 You can run the player directly in "album mode":
  perl ogg.pl -p a

 You can run the player in "mood mode":
  perl ogg.pl -m happy

 To get some simple stats about listening preferences run:
  perl ogg.pl -s (or -s a: album stats)
  perl ogg.pl -s p (artist stats)
  perl ogg.pl -s t (tracks stats)
 

Commands:
 The player accepts one-letter commands from standard input (won't be echoed and no return is needed). Accepted commands are:
 
 * n : next song (skip)
 * p : pause player
 * q : quit
 * , : Lower volume
 * . : Increase volume
 * + : Like song
 * - : Dislike song
 * a : Activate album mode (listen to the whole album; shuffle albums)
 * t : Return to default mode (shuffle single songs)
 * c : Enter mood tag for the album (only works in album mode)
 * N : In album mode, skip whole album
 * r : Reread directories in collection, to check for new songs
 * u : Update info on songs in collection (e.g. if you changed tags in the meanwhile)
 * s : Search by name: album or track name depending on player mode: results will be put in queue

Config file:
 * .config:
	Edit the "startup" section to define which commands will be executed at startup
	(default is a collection update with "r" and "u")
	Edit the "config" section to define default startup mode 
	(overridden by command line arguments, if present)
	Edit the "score" section to change weights for song scoring
	(absolute values do not matter, they will be scaled so that their sum is always 100)

